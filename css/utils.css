/*compact loading animations */
.dots-bars-5  {

	width: 40px;

	height: 30px;

	--c: linear-gradient(currentColor 0 0);

	background: var(--c) 0 100%/8px 30px, var(--c) 50% 100%/8px 20px, var(--c) 100% 100%/8px 10px;

	background-repeat: no-repeat;

	position: relative;

	clip-path: inset(-100% 0);

}

.dots-bars-5::before  {

	content: "";

	position: absolute;

	width: 8px;

	height: 8px;

	border-radius: 50%;

	background: currentColor;

	left: -16px;

	top: 0;

	animation: db5-1 2s linear infinite, db5-2 0.5s cubic-bezier(0,200,.8,200) infinite;

}
@keyframes db5-2 {
	100% {
		top: -0.1px;
	}
}
@keyframes db5-1  {

   0%  {

	left: -16px;

	transform: translateY(-8px);

}

100%  {

	left: calc(100% + 8px);

	transform: translateY(22px);

}

100%  {

	top: -0.1px;

}

} .dots-6  {

	width: 30px;

	aspect-ratio: 1.154;

	--_g: no-repeat radial-gradient(farthest-side,currentColor 90%,#0000);

	background: var(--_g) 50% 0, var(--_g) 0 100%, var(--_g) 100% 100%;

	background-size: 35% calc(35%*1.154);

	animation: d6 0.58s infinite;

}

@keyframes d6  {

	50%, 100%  {

	background-position: 100% 100%,50% 0,0 100%;

}
}

/*Default css styling that exists on all pages*/
@font-face {
	font-family: 'Fredoka';
	src: url('../font.woff2') format('woff2');
}

.font-fredoka {
	font-family: 'Fredoka'
}

@font-face {
	font-family: 'regular-bookweb';
	src: url('../regular-bookweb.woff') format('woff');
}

.font-bookweb {
	font-family: 'regular-bookweb'
}

.vh-full {
	height: 100vh;
}

html.chrome *:focus-within > .decorate > div, html.chrome .decorate-parent:focus-within > .decorate > div, html.chrome *:hover > .decorate > div, html.chrome .decorate-parent:hover > .decorate > div {
	--tw-scale-x: 8;
	--tw-scale-y: 8;
	transform: scale3d(var(--tw-scale-x),var(--tw-scale-y),1);
	--tw-bg-opacity: 0.15;
}

html.chrome * > .decorate.out > div, html.chrome .decorate-parent > .decorate.out > div {
	--tw-scale-x: 8;
	--tw-scale-y: 8;
}

*:hover > .decorate.out > div, .decorate-parent:hover > .decorate.out > div {
	--tw-scale-x: 1;
	--tw-scale-y: 1
}

.rounded-inherit {
	border-radius: inherit;
}

.hover\:overflow-scroll:hover {
	overflow-y: scroll;
}

.not-here:hover, .not-here:hover * {
	cursor: not-allowed;
	touch-action: none;
}

.not-here button {
	pointer-events: none;
	cursor: not-allowed !important;
}

.not-here {
	opacity: 0.5 !important;
}

.custom-cursor, .custom-cursor * {
	cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewport="0 0 28 28" style="font-size:16px"><text y="50%">ðŸ”‘</text></svg>') 16 0, auto;
}

* {
	-webkit-tap-highlight-color: transparent;
}

.notify:hover, .notify *:not(.not-here):not(.not-here *):hover, *.highlight, *.highlight-ol li/*:not(.ignore)*/
:hover {
	transition: 0s;
	border: 2px dashed rgb(167 50 20 / 60%);
	background: rgb(167 50 20 / 6%);
}

/*
Moved here for it to be replaced by style.innerText.replace
*/
.editor .dom-content li .wrap-on-line *:not(.decorate):not(.decorate > *):not(.tooltip), .editor .dom-content li:focus-within .wrap-on-line *:not(.decorate):not(.tooltip) {
	position: relative;
	width: auto;
}

.editor .dom-content li .wrap-on-line div:last-child > div:focus-within {
	display: inline-block;
}

.top-unset {
	top: unset;
}

.left-unset {
	left: unset;
}

.bottom-unset {
	bottom: unset;
}

.right-unset {
	right: unset;
}

/*for marking clickable elements for visual effects*/
.ripple {
  overflow: hidden;
}
/*useful styling for marking tabs, is used with tooltip */
.transition-hr {
  transition: transform .2s cubic-bezier(0.215, 0.61, 0.355, 1);
}
/* useful for making text appearing in the center of lines */
.bulge-center {
	background: linear-gradient(to right, transparent, currentColor, transparent);
}
.bulge-left {
 background: linear-gradient(to right, currentColor, transparent, transparent);
}
.bulge-right {
 background: linear-gradient(to right, transparent, transparent, currentColor);
}


:root {
	--base-fractional-unit: 0.125rem;/*for -0\.5*/
	--base-whole-number-unit: 0.25rem; /* for -1*/
}
.\[\&\>\*\]\:p-2 > * {
	padding: 0.5rem;
}
.\[\&\>\*\]\:rounded-md > * {border-radius:.375rem}
.hover\:\[\&\>\*\]\:border-2\:border-orange > *:hover {
	border: 2px solid orange;
}
.focus\:\[\&\>\*\]\:border-2\:border-orange > *:focus {
	border: 2px solid orange;
}
.\[\&\>\*\]\:align-middle>*  {

	 vertical-align: middle}.\[\&\>\*\]\:bg-current\:border-8\:border-current > *  {

	 border-color: currentColor;

	 border-width: 8px;

	 background: currentColor;

}

 .\[\&\>\*\]\:block > *  {

	 display: block;

	 width: 100%;

}

 .z-3  {

	 z-index: 3;

}

 .switch  {

	 --switch_width: 2em;

	 --switch_height: 1em;

	 --switch-size: 14px;

	 --thumb_color: #e8e8e8;

	 --track_color: #e8e8e8;

	 --track_active_color: #888;

	 --outline_color: #000;
/* added font-size as an improvement */

	 font-size: var(--switch-size);

	 line-height: var(--switch-size);

	 position: relative;

	 display: inline-block;

	 width: var(--switch_width);

	 height: var(--switch_height);

}

 .switch input  {

	 opacity: 0;

	 width: 0;

	 height: 0;

}

 .switch .slider  {

	 box-sizing: border-box;

	 border: 2px solid var(--outline_color);

	 position: absolute;

	 cursor: pointer;

	 top: 0;

	 left: 0;

	 right: 0;

	 bottom: 0;

	 background-color: var(--track_color);

	 transition: .15s;

	 border-radius: var(--switch_height);

}

 .switch .slider:before  {

	 box-sizing: border-box;

	 position: absolute;

	 content: "";

	 height: var(--switch_height);

	 width: var(--switch_height);

	 border: 2px solid var(--outline_color);

	 border-radius: 100%;

	 left: -2px;

	 bottom: -2px;

	 background-color: var(--thumb_color);

	 transform: translateY(-0.2em);

	 box-shadow: 0 0.2em 0 var(--outline_color);

	 transition: .15s;

}

 

	/*start of hover, focus section of switch 

	*/

 .switch input:checked ~ .slider  {

	 background-color: var(--track_active_color);

}

 .switch input:focus-visible ~ .slider  {

	 box-shadow: 0 0 0 4px var(--track_active_color);

}

 

	/* Raise thumb when hovered 

	*/

 .switch input:hover ~ .slider:before  {

	 transform: translateY(-0.3em);

	 box-shadow: 0 0.3em 0 var(--outline_color);

}

 .switch input:checked ~ .slider:before  {

	 transform: translateX(calc(var(--switch_width) - var(--switch_height))) translateY(-0.2em);

}

 

	/* Raise thumb when hovered & checked 

	*/

 .switch input:hover:checked ~ .slider:before  {

	 transform: translateX(calc(var(--switch_width) - var(--switch_height))) translateY(-0.3em);

	 box-shadow: 0 0.3em 0 var(--outline_color);

}

 

	/*end of styles for standalone switch component. From uiverse.io by @Voxybuns 

	*/

 .z-1  {

	 z-index: 1;

}

 .stroked  {

	 -webkit-text-fill-color: transparent;

	 -webkit-text-stroke: 2px black;

}

 .precise-typo-1  {

	 

	/*min: 70px, max: 190px 

	*/

 font-size: calc(110px + (240 - 100) * ((100vw - 400px) / (1200 - 400))) } 
 .fluid-fontsize  {

	 font-size: clamp(1rem, 0.095rem + 3.45vw, 1.75rem);

}

 .font-harrington  {

	 font-family: Harrington;

}

 .font-poor-richard  {

	 font-family: 'Poor Richard' } .perspective  {

	 perspective: 4rem;

	 perspective-origin: bottom right;

}

 html.preloaded .locked-in  {

	 opacity: .999;

	 transform: rotateX(0deg);

}

 .locked-in  {

	 opacity: 0.01;

	 --scaffold-delay: 630ms;

	 transform-style: preserve-3d;

	 will-change: transform;

	 transform: rotateX(90deg) translate3d(-100px, 100%, 0px);

	 text-rendering: optimizelegibility;

	 -webkit-font-smoothing: antialiased;

	 transform-origin: center bottom;

	 transition: transform 1s cubic-bezier(.215,.61,.355,1), opacity .35s linear;

	 transition-delay: calc(var(--index)*.5s + .2s + var(--scaffold-delay));

	 transform-style: preserve-3d;

}

	/* end of styles for preloaded swiping in hero text 

	*/


/* utility animations */

@keyframes inputHighlighter  {

	 0%  {

	 background: #5264AE;

}

 100%  {

	 width: 0;

	 background: transparent;

}

 } @keyframes translate-y-full  {

	 0%  {

	 transform: translateY(0%);

}

 100%  {

	 transform: translateY(200%);

}

 } @keyframes rotate  {

	 from  {

	 transform: translateX(0);

}

 to  {

	 transform: translateX(-50%);

}

 } @keyframes loader  {

	 0%  {

	 transform: 

	/*translateX(-50%) translateY(-50%) 

	*/

 scale(1) rotate(-90deg);

}

 25%  {

	 transform: scale(1.1) rotate(-90deg);

}

 50%  {

	 transform: scale(1.1) rotate(-180deg);

}

 75%  {

	 transform: scale(1.1) rotate(-180deg);

}

 100%  {

	 transform: 

	/*translateX(-50%) translateY(-50%) 

	*/

 scale(1) rotate(-180deg);

}

 }


/* tooltip */
.tooltip {
   --delay: 0s;
    font-family: inherit;
    transition: opacity 0.2s, transform 0.2s ease, visibility 0s;
	--arrow-x: 0%;
	--arrow-y: 0%;
    --arrow-color: currentcolor;
	--arrow-degree: 0deg;
}
.tooltip.hide {
	opacity: 0;
	visibility: hidden;
}
.tooltip:not(.vanish-hover) {
  visibility: hidden;
  opacity: 0;
}
.tooltip.no-hover {
 --x: 0px;
 --y: 0%;
 --pad-x: 0px;
 --pad-y: 0px;
 --offset: calc(var(
 --pad-x) + var(--x)), calc(var(--pad-y) + var(--y)), 0px;
 transform: translate3d(var(--offset)) !important;
}
.tooltip.to-top {
	--arrow-x: 0%;
	--arrow-degree: 0deg;
    bottom: calc(100% + 5px);
	left: 50%;
    transform: translateX(-50%);
}
.tooltip.to-bottom {
	--arrow-x: 0%;
	--arrow-degree: 0deg;
	top: calc(100% + 5px);
	left: 50%;
	transform: translateX(-50%);
}
.tooltip.to-right {
 --arrow-y: 50%;
 --arrow-degree: 0deg;
 left: calc(100% + 10px);
 top: 50%;
 transform: translateY(-50%);
}
.tooltip.to-left {
 --arrow-y: 50%;
 --arrow-degree: 0deg;
 top: 50%;
 right:calc(10px + 100%);
 transform: translateY(-50%);
}
.tooltip:before {
	content: attr(data-details);
}
.tooltip:after {
	content: '';
	--arrow-size:inherit;
	position: absolute;
	border: var(--arrow-size) solid transparent;
	transform: translate(var(--arrow-x), var(--arrow-y)) rotate(var(--arrow-degree));
}
.tooltip.no-arrow:after {
  content:unset;
}
.tooltip.to-top:after {
	border-top-color: var(--arrow-color);
	top: 100%;
	left: 45%;
}
.tooltip.to-left:after {
    bottom: 50%;
    border-left-color: var(--arrow-color);
    left: 100%;
}
.tooltip.to-bottom:after {
	border-bottom-color: var(--arrow-color);
	bottom: 100%;
	left: 45%;
}
.tooltip.to-right:after {
	bottom: 50%;
    border-right-color: var(--arrow-color);
    right: 100%;
}

*:hover > .tooltip:not(.no-hover),
*:focus > .tooltip:not(.no-focus),
*:focus-within > .tooltip:not(.no-focus),
.tooltip:not(.no-hover):hover,
.tooltip:not(.no-focus-within):focus-within,
.tooltip-parent:hover > .tooltip,
.tooltip-parent:focus > .tooltip,
.tooltip-parent:focus-within > .tooltip,
.tooltip.show {
 visibility: visible;
 opacity: 1;
 z-index: 3;
}
/*

IMPORTANT

For a tooltip that is not shown, an explicit styling of its child
with visibility: visible; triggers a hover event that then makes tooltip visible

*/
*:not(:hover) > .tooltip:not(.no-focus),
.tooltip-parent:not(:hover) > .tooltip {
  z-index: 2;
 transition: opacity 0.1s var(--delay), transform 0.15s var(--delay) ease, visibility 0s calc(var(--delay) + 0.15s);
}
.tooltip-parent:focus-within > .tooltip,
*:focus-within > .tooltip {
  --focus-in-transition-duration:0s;
  transition: opacity calc(var(--focus-in-transition-duration) + 0.08s), transform calc(var(--focus-in-transition-duration) + 0.09s) ease, visibility calc(var(--focus-in-no-focus-transition-duration) + 0s) 0.1s !important;
}
*:focus-within > .tooltip.no-focus {
	/*
	  a very good preset
	  --focus-within-no-focus-transition: opacity 0.5s ease, transform 0.3s 0.05s ease-out, visibility 0s 0.12s;
	*/
	--focus-within-no-focus-transition: none;
	transition: var(--focus-within-no-focus-transition) !important;
}


/*slide should be used with the no-hover class */
.tooltip.slide {
 --x: 20%;
 /*the values below were as the result of a long-winded, sweaty tweaking, use them as increment for custom durations ^_~ */
 transition: opacity 0.5s ease, transform 0.3s 0.17s ease-out, visibility 0s 0.12s;
}
.tooltip.-slide-y {
	--y: -20%;
	transition: opacity 0.5s ease, transform 0.3s 0.17s ease-out, visibility 0s 0.12s;
}
.tooltip.-slide-y.show,
.tooltip.slide.show {
  --x: 0%;
  --y: 0%;
  z-index: 1;
  transition: opacity 0.5s, transform 0.3s 0.12s ease, visibility 0s 0.06s;
}

*:focus-within > .tooltip:not(.no-hover),
.tooltip:focus-within {
	transition-duration: 0.1s;
	transition-delay: 0s;
}
*:not(:focus-within) > .tooltip.no-hover:not(.no-focus):not(.show) {
	transition: var(--focus-out-no-hover-transition);
}

*:hover > .tooltip.to-top,
*:focus > .tooltip.to-top,
*:focus > .tooltip.no-hover,
.tooltip-parent:hover > .tooltip.to-top,
.tooltip-parent:focus > .tooltip.to-top {
 transform: translate(-50%, -4px);
}
*:hover > .tooltip.to-bottom,
*:focus > .tooltip.to-bottom,
.tooltip-parent:hover > .tooltip.to-bottom,
.tooltip-parent:focus > .tooltip.to-bottom {
 transform: translate(-50%, 4px);
}
*:hover > .tooltip.to-left,
*:focus > .tooltip.to-left,
.tooltip-parent:hover > .tooltip.to-left,
.tooltip-parent:focus > .tooltip.to-left {
 transform: translate(-4px, -50%);
}
*:hover > .tooltip.to-right,
*:focus > .tooltip.to-right,
.tooltip-parent:hover > .tooltip.to-right,
.tooltip-parent:focus > .tooltip.to-right {
 transform: translate(4px, -50%);
}
.tooltip-parent:hover > .tooltip,
*:hover > .tooltip {
  z-index: 2;
}

@media (min-width: 500px)  {

	 .tooltip.base\:show  {

	 visibility: visible;

	 opacity: 1;

	 z-index: 3;

	 --x: 0%;

}
 .base\:relative  {
    position: relative 
  }
}

@media (min-width: 640px) {
 .tooltip.sm\:show,
 .tooltip.slide.sm\:show {
	 visibility: visible;
	 opacity: 1;
	 z-index: 3;
	 --x: 0%;

}
  .tooltip.sm\:show.no-hover, .tooltip.sm\:show.no-focus  {
	 pointer-events: auto;
  }
}
@media (min-width: 768px)  {

	 .md\:left-unset  {

	 left: unset;

}

 .tooltip.md\:show  {

	 visibility: visible;

	 opacity: 1;

	 z-index: 3;

	 --x: 0% !important;

	 

	/*needed in some cases 

	*/

 } .tooltip.md\:show.no-hover, .tooltip.md\:show.no-focus  {

	 pointer-events: auto;

}

 } @media (min-width: 1024px)  {

	 section.prots article > main > section iframe  {

	 height: 85%;

}

 .tooltip.lg\:show  {

	 visibility: visible;

	 opacity: 1;

	 z-index: 3;

	 --x: 0%;

}

 .tooltip.lg\:show.no-hover, .tooltip.lg\:show.no-focus, .tooltip.lg\:show.no-hover .tooltip.show,.tooltip.lg\:show.no-focus .tooltip.show  {

	 pointer-events: auto;

}

 } @media (min-width: 1280px)  {

	 .tooltip.xl\:show  {

	 visibility: visible;

	 opacity: 1;

	 z-index: 3;

	 --x: 0%;

}

 .tooltip.xl\:show.no-hover, .tooltip.xl\:show.no-focus  {

	 pointer-events: auto;

}

 }

/*compact reusable form styles 

	*/

 .compact input:focus ~ span  {

	 animation: inputHighlighter 0.3s ease;

}

 .compact label  {

	 transition: 0.2s ease all;

	 -moz-transition: 0.2s ease all;

	 -webkit-transition: 0.2s ease all;

}

 .compact > div:focus-within  {

	 background-color: rgb(82 100 175/10%);

}

 .compact input:focus ~ label, .compact input:valid ~ label  {

	 top: -20px;

	 font-size: 14px;

	 color: #5264AE;

}

 .compact > div > div:before, .compact > div > div:after  {

	 content: '';

	 height: 2px;

	 width: 0;

	 bottom: 1px;

	 position: absolute;

	 background: #5264AE;

	 transition: 0.2s ease all;

	 -moz-transition: 0.2s ease all;

	 -webkit-transition: 0.2s ease all;

}

 .compact > div > div:before  {

	 left: 50%;

}

 .compact > div > div:after  {

	 right: 50%;

}

 .compact input:focus ~ div:before, .compact input:focus ~ div:after  {

	 width: 50%;

}
